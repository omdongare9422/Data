1.CREATE TABLE Department ( dept_id INT PRIMARY KEY, dept_name VARCHAR(50) );

2.INSERT INTO Department VALUES (1, 'HR'), (2, 'Engineering'), (3, 'Finance');

3.CREATE TABLE Employee ( emp_id INT PRIMARY KEY, emp_name VARCHAR(50), dept_id INT, FOREIGN KEY (dept_id) REFERENCES Department(dept_id) );

4.INSERT INTO Employee VALUES (101, 'Alice', 2), (102, 'Bob', 1), (103, 'Charlie', 2), (104, 'David', 3), (105, 'Eva', 1);

5.CREATE TABLE Salary ( emp_id INT, salary DECIMAL(10,2), FOREIGN KEY (emp_id) REFERENCES Employee(emp_id) );

6.INSERT INTO Salary VALUES (101, 80000), (102, 50000), (103, 85000), (104, 60000), (105, 55000);

7. Implicite cursor
	`DELIMITER $$
	CREATE PROCEDURE GetEmployeeSalary(IN empId INT)
	BEGIN
	DECLARE v_salary DECIMAL(10,2);

	SELECT salary INTO v_salary
	FROM Salary
	WHERE emp_id = empId;

	SELECT CONCAT('Salary is: ', v_salary) AS Result;
	END$$`

8.DELIMITER ;

9. CALL GetEmployeeSalary(101);

10.Explicit Cursor
	`DELIMITER //
	CREATE PROCEDURE simple_cursor_example()
	BEGIN
	DECLARE done INT DEFAULT FALSE;
	DECLARE emp_name VARCHAR(50);
	DECLARE emp_salary DECIMAL(10,2);
	
	DECLARE 	emp_cursor CURSOR FOR
	SELECT e.emp_name, s.salary
	FROM Employee e
	JOIN Salary s ON e.emp_id = s.emp_id;

	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

	OPEN emp_cursor;

	SELECT 'Employee Cursor Results:' AS message;

	read_loop: LOOP
	FETCH emp_cursor INTO emp_name, emp_salary;
	IF done THEN
	LEAVE read_loop;
	END IF;

	SELECT CONCAT(emp_name, ': $', emp_salary) AS employee_info;
	END LOOP;

	CLOSE emp_cursor;
	END //`

11.DELIMITER ;

12.CALL simple_cursor_example();


